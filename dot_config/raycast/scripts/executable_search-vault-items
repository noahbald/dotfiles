#!/opt/homebrew/bin/nu

# Dependencies:
#   1. The Bitwarden CLI: https://bitwarden.com/help/article/cli/
#   2. The `jq` utility: https://stedolan.github.io/jq/
#
# Install via homebrew: `brew install bitwarden-cli jq`

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Search Vault Items
# @raycast.mode fullOutput
#
# Optional parameters:
# @raycast.packageName Bitwarden
# @raycast.icon images/bitwarden.png
# @raycast.argument1 { "type": "text", "placeholder": "Query" }
# @raycast.argument2 { "type": "text", "placeholder": "Include Passwords? (y/n)", "optional": true }
#
# Documentation
# @raycast.author Phil Salant
# @raycast.authorURL https://github.com/PSalant726
# @raycast.description Search all items in a Bitwarden vault.

source ./setup.nu
use ./unlock.nu

def main [query: string, show_password?: string] {
  let session = unlock

  mut omit = [password]
  if $show_password == "y" {
    $omit = []
  } 

  return (
    bw list items ...$session --search $query
    | from json
    | select -i name login.username login.uris.0.uri login.password revisionDate
    | rename name username uri password updated
    | reject ...$omit
    | update cells -c [uri] { |uri| 
      if ($uri | is-empty) {
        $uri
      } else if ($uri | str length) < 15 {
        $uri
      } else {
        $"($uri | str substring 0..13)..."
      }
    }
    | update cells -c [updated] { into datetime }
  )
}
