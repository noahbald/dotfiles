#!/opt/homebrew/bin/nu

# Dependencies:
#   1. The Bitwarden CLI: https://bitwarden.com/help/article/cli/
#   2. The `jq` utility: https://stedolan.github.io/jq/
#
# Install via homebrew: `brew install bitwarden-cli jq`

# IMPORTANT:
# This script only displays accurate session statuses when you have
# previously used the `Log In`, `Unlock`, `Lock`, and `Log Out`
# scripts within this package. If you're getting unexpected results
# or errors, try running the `Log Out` script, or:
#   bw logout && security delete-generic-password -a ${USER} -s raycast-bitwarden
# and logging in again using the `Log In` script.

# Parameters
# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Bitwarden Status
# @raycast.mode inline

# Conditional parameters:
# @raycast.refreshTime 5m

# Optional parameters:
# @raycast.packageName Bitwarden
# @raycast.icon images/bitwarden.png

# Documentation:
# @raycast.author Phil Salant
# @raycast.authorURL https://github.com/PSalant726
# @raycast.description Display the authentication and lock status of the user's Bitwarden session.

source ./setup.nu
use ./unlock.nu

def delete_token [session: list<string>] {
  if ($session | is-empty) {
    return
  }
  security delete-generic-password -a $env.USER -s raycast-bitwarden
}

def main [] {
  let session = try { unlock } catch { [] }

  match $"(bw --raw status ...$session | jq --raw-output '.status')" {
    "unauthenticated" => {
      delete_token $session
      return "‚ùå  Logged out"
    },
    "locked" => {
      delete_token $session
      return "üîí  Locked"
    },
    "unlocked" => {
      return "‚úÖ  Unlocked"
    }
    $status => {
      echo $"Unexpected status: ($status)"
      error make -u { msg: "‚ö†Ô∏è  An error occurred. Please try again." }
    },
  }
}
