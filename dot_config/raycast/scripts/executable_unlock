#!/opt/homebrew/bin/nu

# Dependency: This script requires the Bitwarden CLI:
# https://bitwarden.com/help/article/cli/
#
# Install via homebrew: `brew install bitwarden-cli`

# IMPORTANT:
# You must first authenticate your session using the `Log In` script
# before this script will work as expected. Note that using the
# `Log In` script will automatically unlock the session in addition
# to authenticating.
#
# Use this script only for unlocking an authenticated, but locked,
# session. You can check your session's authentication and lock status
# using the `Session Status` command.

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Unlock Session
# @raycast.mode silent
#
# Optional parameters:
# @raycast.packageName Bitwarden
# @raycast.icon images/bitwarden.png
# @raycast.argument1 { "type": "text", "placeholder": "Master Password", "secure": true }
#
# Documentation
# @raycast.author Phil Salant
# @raycast.authorURL https://github.com/PSalant726
# @raycast.description Unlock an authenticated Bitwarden session.

source ./setup.nu

def main [password: string] {
  let out = bw --raw unlock $password
  if $env.LAST_EXIT_CODE != 0 {
    error make -u { msg: $out }
  }

  security add-generic-password -U -a $env.USER -s raycast-bitwarden -j "Bitwarden session token for use with Raycast" -w $out
  return "Session unlocked"
}
