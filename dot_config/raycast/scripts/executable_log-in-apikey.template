#!/opt/homebrew/bin/nu

# Dependency: This script requires the Bitwarden CLI:
# https://bitwarden.com/help/article/cli/
#
# Install via homebrew: `brew install bitwarden-cli`

# These values can be found in the "API Key" section of a web vault:
# https://vault.bitwarden.com/#/settings/account

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title Log In
# @raycast.mode silent
#
# Optional parameters:
# @raycast.packageName Bitwarden
# @raycast.icon images/bitwarden.png
# @raycast.argument1 { "type": "text", "placeholder": "Master Password", "secure": true }
#
# Documentation
# @raycast.author Marcel Bochtler
# @raycast.authorURL https://github.com/MarcelBochtler
# @raycast.description Log in to Bitwarden using an API key.

let BW_CLIENTID = ""
let BW_CLIENTSECRET = ""

source ./setup.nu

def main [password: string] {
  if  $BW_CLIENTID == "" or $BW_CLIENTSECRET == "" {
    error make -u { msg: "Error: API key not set." }
  }

  try {
    let login_token = with-env {
      BW_CLIENTID : $BW_CLIENTID,
      BW_CLIENTSECRET : $BW_CLIENTSECRET,
    } {
      bw --raw login --apikey
    }
  } catch {
    error make -u { msg: "login failed" }
  }

  mut unlock_token = ""
  try {
    $unlock_token = $"(bw --raw unlock $password)"
  } catch { |err|
    echo "unlock failed"
    error make -u { msg: $err.msg }
  }

  security add-generic-password -U -a $env.USER -s raycast-bitwarden -j "Bitwarden session token for use with Raycast" -w $unlock_token
  return "Login successful! Your session is now unlocked."
}
